{"componentChunkName":"component---src-templates-blog-post-js","path":"/hello-gatsby/","result":{"data":{"site":{"siteMetadata":{"title":"Matthew Emerson"}},"markdownRemark":{"id":"0ca17847-c885-5a62-b0d3-9e728c3c2213","excerpt":"I recently discovered a great podcast, Programming Throwdown,\nthat featured Gatsby in a prior episode. It was\ndescribed as a quick and easy way to generateâ€¦","html":"<p>I recently discovered a great podcast, <a href=\"https://www.programmingthrowdown.com/\">Programming Throwdown</a>,\nthat featured <a href=\"https://www.gatsbyjs.com/\">Gatsby</a> in a prior episode. It was\ndescribed as a quick and easy way to generate static websites while still\nharnessing the power and compatibility of React. At the time I pictured a\ntemplating engine, similar to Jekyll, with a build process that made it easy to\ndeploy static content. I wasn't prepared for the power and flexibility that\nGatsby offers right out of the box.</p>\n<p>A few years ago, I decided to build a <a href=\"https://memerson.dev/\">personal website</a> using React. My goal was\nto approach the project much the same way I would at work. I wanted to have a\n<a href=\"https://github.com/emersonmde/memerson\">React website</a> deployed in S3 with CloudFront that stored posts in DynamoDB.\nAnother major goal was to have all of this defined using the <a href=\"https://github.com/emersonmde/memerson/tree/main/infrastructure\">AWS CDK</a> including a\nfully automated <a href=\"https://github.com/emersonmde/memerson/blob/main/infrastructure/lib/pipeline-stack.ts\">CI/CD pipeline</a>. I was able to get a basic website set up using\nCognito for authentication, API Gateway and Lambda for the backend, and a\npre-built <a href=\"https://github.com/jpuri/react-draft-wysiwyg\">WYSIWYG editor component</a> to create and edit posts all deployed using\nAWS Code Pipeline.</p>\n<p>Despite the progress, I still wasn't happy with the editor or the pipeline.\nAlso, to no one's surprise, CDK caused additional headaches that made changing\nand testing the backend or the pipeline a multi-hour endeavor. The thought of\nwrestling with the CDK or the pre-built WYSIWYG component meant I just avoided\nmaking any improvements and eventually abandoned the idea of blogging\naltogether.</p>\n<h2>Enter GitHub Actions</h2>\n<p>My first exposure to GitHub Actions was from the book <a href=\"https://www.zero2prod.com/index.html?country_code=US\">Zero To Production In Rust</a>\nwhich has a section on CI/CD pipelines. The book provides a single workflow\nconfiguration file, less than 100 lines, that can be used as a start for any Rust\nproject that includes building, testing, linting, formatting, and code coverage.\nAfter years of working with proprietary and public CI/CD solutions, the ease of\nuse and general applicability of GitHub actions blew me away.</p>\n<p>One of the best parts of GitHub actions is the extensive community that have built\nout many common CI/CD tasks, one of which is deploying directly to GitHub pages.\nWithout the need to setup any keys, permissions, or targets, an action such as\n<a href=\"https://github.com/JamesIves/github-pages-deploy-action\">JamesIves/github-pages-deploy-action</a> can deploy any directory from the build\ndirectly to a branch (such as <code class=\"language-text\">gh-pages</code>).</p>\n<p>Here is the workflow I've been using with Gatsby (more on this in a minute), but it\nshould work with any node static site build:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build  \n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>  \n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>  \n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>  \n      <span class=\"token punctuation\">-</span> main  \n<span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span>  \n  <span class=\"token key atrule\">contents</span><span class=\"token punctuation\">:</span> write  \n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>  \n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>  \n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest  \n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>  \n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4  \n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js  \n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v4.0.1  \n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>  \n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'20'</span>  \n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies  \n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install  \n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build  \n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build  \n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy  \n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> JamesIves/github<span class=\"token punctuation\">-</span>pages<span class=\"token punctuation\">-</span>deploy<span class=\"token punctuation\">-</span>action@v4.5.0  \n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>  \n          <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages  \n          <span class=\"token key atrule\">folder</span><span class=\"token punctuation\">:</span> public</code></pre></div>\n<p>Each <code class=\"language-text\">uses</code> directive invokes an action with the parameters specified in the <code class=\"language-text\">with</code> block. Need to add a step, change the triggers, or re-order steps? No problem, each time this file is pushed upstream, the workflow automatically changes.</p>\n<p>This was exactly what I was looking for. The best part about this workflow, it deploys\nto GitHub Pages which is completely free! No more worrying about the hidden cost\nof auto scaling serverless solutions. The last piece of the puzzle was a way to\nmanage and edit blog posts as markdown files without the need to create a bespoke backend solution. Thats where Gatsby comes in.</p>\n<h2>The Almost Great Gatsby</h2>\n<p>Gatsby is an open source framework based on React that includes a GraphQL data\nlayer and works out of the box to compile and build fully featured React\nwebsites. There are also many starter templates that make it easy to get up\nand running. In this case, I chose to start with the <code class=\"language-text\">gatsby-starter-blog</code>:</p>\n<ol>\n<li>Install Gatsby:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> gatsby-cli</code></pre></div>\n<ol start=\"2\">\n<li>Create new project from a template:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">gatsby new blog https://github.com/gatsbyjs/gatsby-starter-blog</code></pre></div>\n<ol start=\"3\">\n<li>Run the development site:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token builtin class-name\">cd</span> blog\ngatsby develop</code></pre></div>\n<p>Out of the box the <code class=\"language-text\">gatsby-starter-blog</code> is configured to use Gatsby's GraphQL data\nlayer to find markdown files corresponding to blog posts and combine that with website\nmetadata. The results are then rendered as HTML using React components.</p>\n<p>This works incredibly well. Each blog post is plain markdown in a directory. By using\nmarkdown saved locally, I can use something like Obsidian that has great markdown\nsupport along with vim motions. The metadata is defined in the <code class=\"language-text\">gatsby-config.js</code>\nfile which makes it easy to reference in any component. Each query is run at build\ntime to generate the necessary static assets which can be uploaded to any\nstatic website host. Also since Gatsby is a React based framework, there was no\nneed for me to learn yet another frontend framework.</p>\n<p>So where's the catch? So far everything I've wanted to do has been on the happy path.\nIts not clear how much trouble it would be to customize Gatsby, although it does support\nplugins. Also including a full GraphQL data layer on top of React with additional support\nfor SEO, Server Side Rendering, Deferred Static Generation, and more means this is\nanything but light weight. I'm already not a big fan of learning GraphQL to access files\nand data, but only time will tell if scaling or extending this website in the future\nproves to be more trouble than its worth.</p>\n<h2>Final Thoughts</h2>\n<p>Overall I'm extremely happy with the current setup. GitHub Actions and Pages have\nbeen a true pleasure to work with compared to some other solutions. I'm excited to\ntake full advantage of the power and speed of Gatsby, but cautious of the complexity\nit may add when maintaining this project long term.</p>\n<p>Interested in what the final result looks like? Check out the <a href=\"https://github.com/emersonmde/emersonmde.github.io\">repo for this site on\nGitHub</a>.</p>","frontmatter":{"title":"Hello, Gatsby","date":"February 04, 2024","description":"A look at using Gatsby, a static site generator, with GitHub Actions and Pages."}},"previous":null,"next":null},"pageContext":{"id":"0ca17847-c885-5a62-b0d3-9e728c3c2213","previousPostId":null,"nextPostId":null}},"staticQueryHashes":["2841359383"],"slicesMap":{}}