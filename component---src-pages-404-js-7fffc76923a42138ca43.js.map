{"version":3,"file":"component---src-pages-404-js-7fffc76923a42138ca43.js","mappings":"yJA2CA,IAxCeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAGFA,EADEF,EAEAG,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAKR,IAKhBK,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCR,GAYP,OACEK,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBJ,GACjDG,EAAAA,cAAA,UAAQC,UAAU,iBAAiBF,GACnCC,EAAAA,cAAA,YAAOJ,GACPI,EAAAA,cAAA,UAAQC,UAAU,iBAAgB,MAC7B,IAAIG,MAAOC,cAAc,yCAC5BL,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAQM,QAdIC,KAClBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UACV,EAUkCV,UAAU,gBAAgB,aAAW,iCAAgC,mBAGnG,C,+ECvCV,EAAe,IAA0B,mDCuDzC,MA5CYR,IAAuC,IAADmB,EAAAC,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAErB,EAAK,SAAEC,GAAUH,EAC3C,MAAM,KAAEwB,IAASC,EAAAA,EAAAA,gBAAe,cAiB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBjB,MAClC2B,EAA2B,QAApBT,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBS,QAEnC,OACEtB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQqB,EAAkB1B,EAAK,MAAM0B,EAAiB1B,GACtDK,EAAAA,cAAA,QAAMuB,KAAK,cAAcC,QAASL,IAClCnB,EAAAA,cAAA,QAAMyB,SAAS,WAAWD,QAAS7B,IACnCK,EAAAA,cAAA,QAAMyB,SAAS,iBAAiBD,QAASL,IACzCnB,EAAAA,cAAA,QAAMyB,SAAS,UAAUD,QAAQ,YACjCxB,EAAAA,cAAA,QAAMuB,KAAK,eAAeC,QAAQ,YAClCxB,EAAAA,cAAA,QACEuB,KAAK,kBACLC,SAA0B,QAAjBV,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBY,cAAM,IAAAX,OAAR,EAAjBA,EAA2BY,UAAO,KAE7C3B,EAAAA,cAAA,QAAMuB,KAAK,gBAAgBC,QAAS7B,IACpCK,EAAAA,cAAA,QAAMuB,KAAK,sBAAsBC,QAASL,IAC1CnB,EAAAA,cAAA,QAAMuB,KAAK,WAAWC,QAAO,GAAKF,EAAUM,IAC5C5B,EAAAA,cAAA,QAAMuB,KAAK,gBAAgBC,QAAO,GAAKF,EAAUM,IAEhDhC,EACA,C,kGC7CP,MAWaiC,EAAOA,IAAM7B,EAAAA,cAAC8B,EAAAA,EAAG,CAACnC,MAAM,mBAErC,UAbqBF,IAAyB,IAAxB,KAAEsC,EAAI,SAAErC,GAAUD,EACtC,MAAMuC,EAAYD,EAAKd,KAAKG,aAAazB,MAEzC,OACEK,EAAAA,cAACiC,EAAAA,EAAM,CAACvC,SAAUA,EAAUC,MAAOqC,GACjChC,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://emersonmde-github-io/./src/components/layout.js","webpack://emersonmde-github-io/./src/images/icon.png","webpack://emersonmde-github-io/./src/components/seo.js","webpack://emersonmde-github-io/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    })\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer className=\"layout-footer\">\n        Â© {new Date().getFullYear()}, Matthew Emerson. All rights reserved\n        <div>\n          <button onClick={scrollToTop} className=\"return-to-top\" aria-label=\"Return to the top of the page\">Return to top</button>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","export default __webpack_public_path__ + \"static/icon-d22ad5e2baee93c5f34dee6c8737bd83.png\";","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport icon from \"../images/icon.png\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const siteUrl = site.siteMetadata?.siteUrl\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"og:image\" content={`${siteUrl}${icon}`} />\n      <meta name=\"twitter:image\" content={`${siteUrl}${icon}`} />\n\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","Date","getFullYear","onClick","scrollToTop","window","scrollTo","top","behavior","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata3","_site$siteMetadata3$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","siteUrl","name","content","property","social","twitter","icon","Head","Seo","data","siteTitle","Layout"],"sourceRoot":""}