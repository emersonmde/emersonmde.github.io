{"version":3,"file":"component---src-pages-404-js-7fffc76923a42138ca43.js","mappings":"yJA2CA,IAxCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAGFA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAKhB,gBAAC,EAAAM,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCP,GAYP,OACE,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,0BAAQI,UAAU,iBAAgB,MAC7B,IAAIG,MAAOC,cAAc,yCAC5B,2BACE,0BAAQC,QAdI,KAClBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UACV,EAUkCT,UAAU,gBAAgB,aAAW,iCAAgC,mBAGnG,C,+ECvCV,EAAe,IAA0B,mDCuDzC,MA5CY,IAAuC,IAAD,YAArC,YAAEU,EAAW,MAAEf,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEe,IAASC,EAAAA,EAAAA,gBAAe,cAiB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBnB,MAClCqB,EAA2B,QAApB,EAAGL,EAAKG,oBAAY,aAAjB,EAAmBE,QAEnC,OACE,gCACE,6BAAQD,EAAkBpB,EAAK,MAAMoB,EAAiBpB,GACtD,wBAAMsB,KAAK,cAAcC,QAASL,IAClC,wBAAMM,SAAS,WAAWD,QAASvB,IACnC,wBAAMwB,SAAS,iBAAiBD,QAASL,IACzC,wBAAMM,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAP,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBM,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASvB,IACpC,wBAAMsB,KAAK,sBAAsBC,QAASL,IAC1C,wBAAMI,KAAK,WAAWC,QAAO,GAAKF,EAAUM,IAC5C,wBAAML,KAAK,gBAAgBC,QAAO,GAAKF,EAAUM,IAEhD1B,EACA,C,kGC7CP,MAWa2B,EAAO,IAAM,gBAAC,IAAG,CAAC5B,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAE6B,EAAI,SAAE9B,GAAU,EACtC,MAAM+B,EAAYD,EAAKb,KAAKG,aAAanB,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAO8B,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://emersonmde-github-io/./src/components/layout.js","webpack://emersonmde-github-io/./src/images/icon.png","webpack://emersonmde-github-io/./src/components/seo.js","webpack://emersonmde-github-io/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    })\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer className=\"layout-footer\">\n        Â© {new Date().getFullYear()}, Matthew Emerson. All rights reserved\n        <div>\n          <button onClick={scrollToTop} className=\"return-to-top\" aria-label=\"Return to the top of the page\">Return to top</button>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","export default __webpack_public_path__ + \"static/icon-d22ad5e2baee93c5f34dee6c8737bd83.png\";","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport icon from \"../images/icon.png\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const siteUrl = site.siteMetadata?.siteUrl\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"og:image\" content={`${siteUrl}${icon}`} />\n      <meta name=\"twitter:image\" content={`${siteUrl}${icon}`} />\n\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","onClick","window","scrollTo","top","behavior","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","siteUrl","name","content","property","social","twitter","icon","Head","data","siteTitle"],"sourceRoot":""}